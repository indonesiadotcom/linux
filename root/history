#remove apparmor / selinux like, apparmor made for security, but use for spying
/etc/init.d/apparmor stop
/etc/init.d/apparmor teardown
apt remove apparmor
apt purge apparmor
rm -rf /etc/apparmor*
#update 
apt update
apt upgrade
#git
apt install git
#php7
apt-get install -y software-properties-common
apt-get install -y language-pack-en-base
export LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php
apt update
apt-get install php7.0-fpm php7.0-mysql php7.0-gd
apt-get install php7.0-fpm php7.0-mcrypt php7.0-curl php7.0-cli php7.0-mysql php7.0-gd php7.0-xsl php7.0-json php7.0-intl php-pear php7.0-dev php7.0-common php7.0-mbstring php7.0-zip php-soap libcurl3 curl -y
#vi /etc/php/7.0/fpm/php.ini 
#vi /etc/php/7.0/cli/php.ini 
/etc/init.d/php7.0-fpm restart
#nginx
wget http://nginx.org/keys/nginx_signing.key
apt-key add nginx_signing.key
apt update
apt remove nginx nginx-core nginx-common
apt purge nginx nginx-core nginx-common
apt install nginx
#vi /etc/nginx/nginx.conf 
#magento
#mkdir -p /var/www/mag2
#cd /var/www/mag2
#find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \;
#find var vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \;
#vi /etc/nginx/conf.d/mag2.conf
#php bin/magento cache:flush
#php bin/magento deploy:mode:show
#magento cron
#/usr/bin/php /var/www/mag2/bin/magento cron:run | grep -v "Ran jobs by schedule" >> /var/www/mag2/var/log/magento.cron.log
#/usr/bin/php /var/www/mag2/update/cron.php >> /var/www/mag2/var/log/update.cron.log
#/usr/bin/php /var/www/mag2/bin/magento setup:cron:run >> /var/www/mag2/var/log/setup.cron.log 

#redis
apt install php7.0-redis
apt install redis-server
#varnish
apt-get install apt-transport-https
curl https://repo.varnish-cache.org/ubuntu/GPG-key.txt | apt-key add -
echo "deb https://repo.varnish-cache.org/ubuntu/ trusty varnish-4.0" >> /etc/apt/sources.list.d/varnish-cache.list
apt update
apt install varnish
#cp varnish.vcl /var/www/mag2/var/
apt install ntp
#vi /etc/ntp.conf 
/etc/init.d/ntp restart
#modsecurity
wget https://www.modsecurity.org/tarball/2.9.2/modsecurity-2.9.2.tar.gz
apt-get install automake gcc make pkg-config libtool g++ libfl-dev bison build-essential libbison-dev libyajl-dev liblmdb-dev libpcre3-dev libcurl4-openssl-dev libgeoip-dev libxml2-dev apache2-dev
tar xzf modsecurity-2.9.2.tar.gz 
cd modsecurity-2.9.2/
./autogen.sh 
./configure --enable-standalone-module
make
nginx -V
2>&1 nginx -V | tr -- - '\n' | grep _module
wget http://nginx.org/download/nginx-1.12.1.tar.gz
tar xzf nginx-1.12.1.tar.gz 
cd nginx-1.12.1/
cp nginx.configure nginx-1.12.1
#vi nginx.configure 
#chmod +x nginx.configure 
./nginx.configure 
make
make install
#vi /etc/nginx/conf.d/mag2.conf 
#vi /var/www/mag2/nginx.conf.sample 
cp ../modsecurity-2.9.2/modsecurity.conf-recommended /etc/nginx/modsecurity.conf
#vi /var/www/mag2/nginx.conf.sample 
#vi /etc/nginx/modsecurity.conf 
nginx -t
#grep -r 'LocationMatch' /etc/nginx/modsecurity.d/
#vi /etc/nginx/modsecurity.d/modsecurity_00_exclusion.conf 
#chown -R www-data:www-data
